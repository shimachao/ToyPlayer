19:46 2013/10/27
完成了回放控制类的实现（播放，暂停，快进，后退）

23:26 2013/10/27
实现的画面控制接口，IScreenControl除了记录画面大小和对全屏提供支持外，画面大小控制只需靠播放器窗口自己控制，在响应WM_SIZE的过程中设置一下画面大小就可以了。（这样最大化最小化 几倍屏都通过设置大小实现）     让媒体管理类继承IScreenControl接口是不是没必要呢？

TODO: 实现用户悬浮式控制菜单窗口（模仿射手影音）


20:35 2013/11/1
用CVideRender实现了视频帧大小查询
用IMediaSeeking实现了时长的获取

TODO:实现视频截图


11:14 2013/11/2：
实现了播放列表大小和列宽以及“添加”、“移除”按钮的位置随窗口大小变化。

16:53 2013/11/2：
搞定全屏


17:24 2013/11/2：
添加了当前播放文件和当前处于选中文件的概念，用一个int型变量表示正在播放的文件序号。
18:53 2013/11/2
控制面板窗口大小变化随播放窗口变化，但设置了最小大小。当宽度小于500时不再变小。

22:48 2013/11/2：
实现了视频截图功能。修正了全屏退出后视频窗口太小而控制面板窗口没变回500宽度的bug

--------------------------------------------------------------------------------------


23:21 2013/11/28
实现了进度条控件和当前播放时长，总时长静态文本控件

--------------------------------------------------------------------------------------
23:52 2013/11/29
播放窗口和播放列表都添加了右键弹出菜单。但是只实现了部分右键菜单的逻辑功能。
--------------------------------------------------------------------------------------
21:38 2013/11/30
播放窗口的播放列表的右键弹出菜单都已实现。
--------------------------------------------------------------------------------------
12:33 2013/12/1
已写好快捷键，只是快捷中的处理逻辑没有写。

--------------------------------------------------------------------------------------
17:47 2013/12/1
实现了快捷键逻辑。快捷键的工作告一段落。


界面控制用两种逻辑：1.把最大化和恢复当同一操作，内部自己记录状态；2.把最大化和恢复当做两种不同的操作，必须指定当前要进行哪种操作，同时操作后必须修改状态。
如果是别人已经设计好的类似的接口，不需要自己记录状态，必要的找接口查询就可以了，根据查询到的状态进行操作。
--------------------------------------------------------------------------------------

TODO:

设置进度条控件颜色
添加播放模式逻辑：顺序播放，循环播放，单曲播放
贴图、测试(是不是得自绘按钮控件代替进度条和原来的按钮控件)

考研后再重构吧
把播放/暂停、画面控制（主要是最大化/最小化）、音量控制重构后再好写快捷键逻辑。
重构画面大小和声音控制

CListCtrl::GetItemData要不要释放呢？





采用向调试窗口输出信息的方式调试
答案：TRACE（用法类似printf）
videowindow和notifywindow可以不是同一个窗口吗？
vidoewindow可以为整个窗口吗？
答案：从给出的例子上看，好像是可以的

设置视频播放窗口和graph消息接收窗口
打开文件：创建graph，创建并添加sourcefilter，查询时长，render stream(创建videorender)
TODO :: step6
完成IScreen控制接口，并让画面随窗口大小变化